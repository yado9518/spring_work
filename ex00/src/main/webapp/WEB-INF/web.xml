<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee"
xsi:schemaLocation = "http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
id="WebApp_ID" version="3.1">

	<!-- The definition of the Root Spring Container shared by all Servlets and Filters -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<!-- root-context.xml에는 스프링 MVC구조에서 서비스, 모델DAO, mybatis설정관련 부분만 포함되고, 컨트롤러와 뷰영역 설정부분은 포함안됨 -->
		<param-value>/WEB-INF/spring/root-context.xml</param-value>
	</context-param>
	
	<!-- Creates the Spring Container shared by all Servlets and Filters -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	<!-- 한글 인코딩 -->
	<filter>
		<!-- <filter-name>encodingFilter</filter-name> -->
		<filter-name>characterEncodingFilter</filter-name>
		<filter-class>
			org.springframework.web.filter.CharacterEncodingFilter
		</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<!-- <filter-name>encodingFilter</filter-name> -->
		<filter-name>characterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- Processes application requests -->
	<servlet>
		<servlet-name>appServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<!-- 스프링 MVC구조에서 컨트롤러와 뷰영역만 servlet-context.xml에 설정 -->
			<param-value>/WEB-INF/spring/appServlet/servlet-context.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
		
		<!-- 파일 첨부한 것을 이진파일이라고 한다. 이진파일을 binary file이라고 부른다. 이진파일 업로드 설정 -> 자료실 -->
		<multipart-config>
			<!-- 이진파일 업로드 서버 경로, 첨부파일은 실제 서버가 동작하는 컴퓨터 내에 있는 폴더에 업로드 시켜야 하므로 
			c드라이브 밑에 upload폴더와 임시 업로드 파일이 저장할 temp폴더를 각각 생성 -->
			<location>C:\\upload\\temp</location>
			<max-file-size>20971520</max-file-size> <!-- 1MB * 20 = 20MB -> 업로드 되는 파일 최대크기 -->
			<max-request-size>41943040</max-request-size> <!-- 한번에 올릴 수 있는 최대크기 -> 40MB -->
			<file-size-threshold>20971520</file-size-threshold> <!-- 20MB -> 메모리 사용크기 -->
		</multipart-config>
		
	</servlet>
		
	<servlet-mapping>
		<servlet-name>appServlet</servlet-name>
		<url-pattern>/ㄴ</url-pattern>
	</servlet-mapping>
	
</web-app>
