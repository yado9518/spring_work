<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- xml주석문 기호 -->
	<!-- aop자동 프록시 설정. 프록시는 임시저장공간  프록시는 사용자 요청을 받고 대리하여 업무를 처리하는 대리자 역할. aspectj는 aop에서 사용하는 문법을 말한다. -->
	<aop:aspectj-autoproxy/> 
	
	<!-- 스프링 JDBC -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<!-- driverClassName 멤버변수에  value속성값을 저장 -->
		<property name="driverClassName" value="oracle.jdbc.OracleDriver"/>
		<!-- 오라클 접속주소, 1521은 포트번호, xe는 디비명 -->
		<property name="url" value="jdbc:oracle:thin:@127.0.0.1:1521:xe"/>
		<property name="username" value="week"/> <!-- 오라클 접속사용자 -->
		<property name="password" value="week"/> <!-- 비번 -->
	</bean> <!-- bean이 자바 클래스 단위. id명인 dataSource는 자바언어에서 객체명에 해당됨. -->
	
	<!-- spring jdbc와 mybatis를 연결, mybatis환경설정과 매퍼태그 설정 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 스프링의 setter()메서드를 통한 의존성 주입. 그러면 dataSource변수에 ref 빈아이디 dataSource를 호출해서 사용되게 함. -->
		<property name="dataSource" ref="dataSource"/>
		<!-- mybatis-config.xml파일의 역할을 데이터 저장빈 클래스 객체 별칭을 관리. 
		classpath경로는 이클립스 가상경로로 src/main/resources이고,실제 톰캣 경로로 /WEB-INF/classes경로를 뜻한다. -->
		<property value="classpath:/mybatis-config.xml" name="configLocation"/>
		<!-- mybatis 매퍼 xml태그로 쿼리문 다루는 매퍼태그 위치지정 -->
		<property value="classpath:org/zerock/mappers/*/*.xml" name="mapperLocations"/>
	</bean>
	
	<!-- 트랜잭션 설정 -> 트랜잭션 매니져 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<tx:annotation-driven/> <!-- @Transactional을 이용한 트랜잭션 관리가 가능 -->
	
	<!-- mybatis쿼리문 수행객체를 설정 -->
	<!-- clearCache는 임시메모리를 깨끗이 지운다. -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" destroy-method="clearCache">
	<!-- 생성자를 통한 의존성 DI설정. constructor는 생성자를 말함. -->
	<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"/>
	</bean>
	
	<!-- Model *DAOImpl의 @Repository로 설정된 부분을 스프링에서 오토스캔하게 등록해줌 -->
	<context:component-scan base-package="org.zerock.dao"/>
	
	<!-- 서비스 오토스캔 추가. 서비스(Service)의 역할: 
	1.컨트롤러와 모델 DAO를 연결하는 중간 매개체 역할
	2.고객의 추가요구 사항을 반영하는 서비스.
	3.스프링의 aop를 통한 트랜잭션을 적용함으로써 레코드 정확도, 일관성, 원자성의 원칙을 지켜서 사이트의 신뢰도를 가져온다. 자료의 불일치성을 완전히 제거한다. -->
	<context:component-scan base-package="org.zerock.service"/>
	
	<!-- AOP를 XML방식으로 설정 -->
	<aop:config/>
</beans>
